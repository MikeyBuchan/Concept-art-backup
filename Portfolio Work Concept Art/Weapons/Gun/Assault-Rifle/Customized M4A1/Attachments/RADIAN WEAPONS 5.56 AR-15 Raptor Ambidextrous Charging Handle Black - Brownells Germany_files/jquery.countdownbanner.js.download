/**
 * jQuery Plugin to replace special divs with a countdown banner
 *
 * @author mp@innochange.com
 * @version 1.0 (02/11/2018 11:38:236)
 */
(function($) {
  // global var for identifying the single banner
  window.cbid = 0;

  $.fn.extend({
    CountdownBanner: function(options) {
      // default options
      var defaultoptions = {
        'title'           : '',
        'end'             : undefined,
        'titlestyle'      : 'color:#e0e0e0;',
        'countdownstyle'  : 'color:#E8B926;',
        'contentstyle'      : '',
        'format'          : undefined,
        'order'           : undefined,
        'link'            : undefined,
        'reuse'           : false,
        'index'           : 0,
        'forceseconds'    : 0
      },
      // default json values for falling back if nothing is set
      // or something fails
      defaultjson = {
        'format'   : '{"d":"d ","h":":","m":":","s":""}',
        'order'    : '["d", "h", "m", "s"]',
      },
      // tries to get a json string from the options and parse it
      // if it fails, the default string will be used
      jsonify = function(s, sdefault, form) {
        if(typeof(s) === 'object') {
          return s;
        }

        if(!s) {
          s = sdefault;
        }
        
//        s = s.replace(/&quot;/g, '"');
        try{
          return JSON.parse(s);
        }
        catch(err){
          if(s.indexOf('{') != 0) {
            s = s.replace(/:/g, '":"');
            s = s.replace(/,/g, '","');
            if(form == 'array'){
              s = s.replace(/^/g, '["');
              s = s.replace(/$/g, '"]');
            }
            else {
              s = s.replace(/^/g, '{"');
              s = s.replace(/$/g, '"}');
            }
          }
        }

        try{
          return JSON.parse(s);
        }
        catch(err){
          return JSON.parse(sdefault);
        }
      };

      // extend the default options by the user options
      options = $.extend(defaultoptions, options);

      // generate the banners
      this.each(function(index ) {
        window.cbid++;

        options.format   = jsonify(options.format, defaultjson.format);
        options.order   = jsonify(options.order, defaultjson.order, 'array');

        options.index = window.cbid;
        new $.CountdownBanner(this, options);
      });
      return this;
    }
  });


  // the banner functionality
  $.CountdownBanner = function(ctl, options) {
    var $ctl            = $(ctl);
    var $ctlcountdownnode  = $ctl;

    if(options.reuse == 0) {
      // generate html
      var title = $('<div>', {'class' : 'title', 'text' : options.title, 'style' : options.titlestyle});
      $ctl.wrapInner('<div class="cbInner" style="'+options.contentstyle+'"></div>');
      $ctl.prepend(title);
      $ctl.data({'id': options.index});

      if(typeof(options.link) !== 'undefined') {
        $ctl.wrap('<a class="NoDecoration countdownbannerlinkwrapper" href="'+options.link+'"></a>');
      }
    }
    else {
      $ctlcountdownnode = $ctl.find('.ca4.CountDown');
    }

    var countdown = $('<div>', {'class' : 'countdown'});

    for(i=0;i<4;i++) {
      var item = options.order[i];
      var name = options.format[options.order[i]];
      if(typeof(item) !== 'undefined') {
        var addclass = '';
        if(item == 's' && options.forceseconds) {
          addclass = 'donthide';
        }
        if(item == 'm' && name == ':') {
          if(options.forceseconds) {
            name  ='<span class="clabel colon donthide">'+name+'</span>';
          }
          else {
            name  ='<span class="clabel colon ">'+name+'</span>'; 
          }
        }
        else {
          name  ='<span class="clabel">'+name+'</span>';
        }
        
        countdown.append('<span class="'+item+' ' + addclass + '" style="'+options.countdownstyle+'"><span class="value"></span>'+name+'</span> ');
      }
    }

    $ctlcountdownnode.append(countdown).animate({'opacity':1}, function(){$(this).removeClass('Hidden')});


    // function to format the number with leading 0
    pad = function (n) {
      n = Math.abs(n);
      return (n >= 0 && n < 10) ? ("0" + n) : n;
    };

    // set the new countdown numbers
    setCountDown = function( ctl, end, sec ) {
      var $ctl = $(ctl);
      var x = new Date()
      var UTCseconds = Math.floor(x.getTime()/1000);
      var diff       = end - UTCseconds;
      if(diff < 0) {
        $ctl.find('.countdown').hide();
        var iName = 'CAInterval' + $ctl.data('id');
        clearInterval(window[iName]);
        return;
      }
      var round      = diff > 0 ? Math.floor : Math.ceil;
      var msec       = diff - sec;

      var dd  = round(msec / 60 / 60 / 24)
       msec -= dd * 60 * 60 * 24;
      var hh = round(msec / 60 / 60);
      msec -= hh * 60 * 60;
      var mm = round(msec / 60);
      msec -= mm * 60;
      var type = 'sec';

      if(dd > 1) {
        $ctl.find('.d').show();
        $ctl.find('.s').not('.donthide').hide();
        $ctl.find('.colon').not('.donthide').hide();
        $ctl.find('.d .value').html( Math.abs(dd));
        type = 'min';
      }
      else {
        $ctl.find('.d').hide();
        $ctl.find('.s').show();
        $ctl.find('.colon').show();
        hh += dd * 24;
      }
      
      if($ctl.find('.s.donthide').length) {
        type = 'sec';
      }

      $ctl.find('.h .value').html( pad(Math.abs(hh)) );
      $ctl.find('.m .value').html( pad(mm) );
      $ctl.find('.s .value').html( pad(msec) );
      var iName = 'CAInterval' + $ctl.data('id');
      var iType = 'CAIntervalType' + $ctl.data('id');

      // set intervals (depending on minute or seconds)
      if(window[iType] != type ) {
        window[iType] = type == 'min' ? 'min' : 'sec';
        clearInterval(window[iName]);

        if(window[iType] == 'sec') {
          window[iName] = setInterval(function(){ setCountDown($ctl, end, 1) }, 1000);
        }
        else {
          window[iName] = setInterval(function(){ setCountDown($ctl, end, 60) }, 60000);
        }
      }

    };

    setCountDown($ctlcountdownnode, options.end, 0);
  }
})(jQuery);